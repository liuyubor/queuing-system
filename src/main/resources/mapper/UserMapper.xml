<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuyubo.qs.db.DAO.UserMapper">

    <resultMap id="BaseResultMap" type="com.liuyubo.qs.db.POJO.User">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="photo" column="photo" jdbcType="VARCHAR"/>
            <result property="tel" column="tel" jdbcType="CHAR"/>
            <result property="role" column="role" jdbcType="OTHER"/>
            <result property="root" column="root" jdbcType="TINYINT"/>
            <result property="creatTime" column="creat_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        nickname,photo,tel,
        role,root,creat_time
    </sql>

    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
    </select>
    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.open_id AS openId,
               u.nickname,
               u.username,
               u.photo,
               u.tel,
               ( SELECT GROUP_CONCAT( role_name separator "ï¼Œ" ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS roles
        FROM tb_user u
        WHERE u.id = #{userId}
    </select>
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id FROM tb_user WHERE open_id=#{openId} AND status = 1
    </select>


</mapper>
